name: Build & Publish

on:
  push:
    branches:
      - "main"

jobs:
  next-build:
    runs-on: ubuntu-latest
    container: node:lts          # Use node LTS container version, same as Dockerfile base image
    steps:
      - name: Checkout
        uses: actions/checkout@v3       # Checkout the code
      - run: npm install -g pnpm@6.14.5 # Install pnpm
      - run: mkdir /app
      - run: cd /app
      - run: touch .env
      - run: echo "${{ secrets.APPLICATION_ENV }}" > ./env
      - run: pnpm install
      - run: pnpm run build
      - name: Upload Next build          # Upload the artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: |
            .next
            public
          retention-days: 7      
  docker-push:
    needs: next-build 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download next build  
        uses: actions/download-artifact@v2
        with:
          name: build
      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_HUB_KEY }}
          docker build -t sangdamplus-next-dev-image .
          docker push sangdamplus-next-dev-image
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: sangdam
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /data/sangdamplus/next-dev
            docker stop next-dev
            docker pull ${{ secrets.DOCKER_USERNAME }}/sangdamplus-next-dev-image
            docker run -d --log-driver=syslog -p 10100:3000 sangdamplus-next-dev-image --name next-dev
            docker rm next-dev
            docker image prune -a -f